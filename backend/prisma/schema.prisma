generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_UR
model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())

  @@map("users")
}

model Pessoa {
  id                   String    @id @default(uuid())
  nome                 String
  contato              String?
  dataNascimento       String    @map("data_nascimento")
  cpf                  String?
  identidade           String?
  naturalidade         String?
  genero               String?
  escolaridade         Int?
  serie                Int?
  estadoCivil          Int?      @map("estado_civil")
  situacaoProfissional Int?      @map("situacao_profissional")
  salario              String?
  enderecoId           String?   @map("endereco_id")
  telefone             String?
  cartaoSus            String?   @map("cartao_sus")
  profissao            String?
  paciente             Paciente? @relation("PessoaPaciente")
  endereco             Endereco? @relation(fields: [enderecoId], references: [id])

  @@map("pessoas")
}

model Endereco {
  id          String   @id @default(uuid())
  cep         String
  logradouro  String
  numero      String
  complemento String
  unidade     String?
  bairro      String
  localidade  String
  uf          String
  estado      String
  regiao      String?
  referencia  String?
  pais        String?  @default("Brasil")
  pessoas     Pessoa[]

  @@map("enderecos")
}

model Paciente {
  id                   String                    @id @default(uuid())
  pessoaId             String                    @unique @map("pessoa_id")
  status               Boolean?
  nomeMae              String?                   @map("nome_mae")
  nomePai              String?                   @map("nome_pai")
  nomeOutro            String?                   @map("nome_outro")
  remuneracao          String?
  recebeBpc            Int?                      @map("recebe_bpc")
  valorBpc             String?                   @map("valor_bpc")
  aptoReceberBpc       Int?                      @map("apto_receber_bpc")
  tipoEscola           Int?                      @map("tipo_escola")
  escolaNome           String?                   @map("escola_nome")
  observacoes          String[]
  responsavelId        String?                   @map("responsavel_id")
  conjugeResponsavelId String?                   @map("conjugeResponsavel_id")
  outroResponsavelId   String?                   @map("outroResponsavel_id")
  cirurgias            Cirurgia[]
  composicaoFamiliar   ComposicaoFamiliar[]
  cras                 Cras?
  historicoSaude       HistoricoSaude[]
  pessoa               Pessoa                    @relation("PessoaPaciente", fields: [pessoaId], references: [id])
  profissionais        ProfissionalResponsavel[]
  quimioterapias       Quimioterapia[]
  radioterapias        RadioTerapia[]
  situacaoHabitacional SituacaoHabitacional?
  ubs                  Ubs?

  @@map("pacientes")
}

model HistoricoSaude {
  id             String   @id @default(uuid())
  pacienteId     String   @map("paciente_id")
  doencasFamilia Int[]    @default([]) @map("doencas_familia")
  paciente       Paciente @relation(fields: [pacienteId], references: [id])

  @@map("historicos_saude")
}

model Quimioterapia {
  id               String   @id @default(uuid())
  pacienteId       String   @map("paciente_id")
  dataInicio       String?  @map("data_inicio")
  dataUltimaSessao String?  @map("data_ultimaSessao")
  paciente         Paciente @relation(fields: [pacienteId], references: [id])

  @@map("quimioterapias")
}

model RadioTerapia {
  id               String   @id @default(uuid())
  pacienteId       String   @map("paciente_id")
  dataInicio       String?  @map("data_inicio")
  dataUltimaSessao String?  @map("data_ultimaSessao")
  paciente         Paciente @relation(fields: [pacienteId], references: [id])

  @@map("radioterapias")
}

model ProfissionalResponsavel {
  id         String   @id @default(uuid())
  pacienteId String   @map("paciente_id")
  tipo       String?
  nome       String
  crm        String?
  paciente   Paciente @relation(fields: [pacienteId], references: [id])

  @@map("profissionais_responsaveis")
}

model Cirurgia {
  id         String   @id @default(uuid())
  pacienteId String   @map("paciente_id")
  nome       String?
  data       String?
  cid        String?
  paciente   Paciente @relation(fields: [pacienteId], references: [id])

  @@map("cirurgias")
}

model ComposicaoFamiliar {
  id              String   @id @default(uuid())
  pacienteId      String   @map("paciente_id")
  nome            String?
  parentesco      String?
  data_nascimento String?
  estudaOpc       Int?
  escolaridade    String?
  trabalhaOpc     Int?
  renda           String?
  idade           Int?
  paciente        Paciente @relation(fields: [pacienteId], references: [id])

  @@map("composicoes_familiar")
}

model SituacaoHabitacional {
  id                String   @id @default(uuid())
  comoAdquiriuCasa  Int?     @map("como_adquiriu_casa")
  area              Int?
  numeroComodos     Int?     @map("numero_comodos")
  material          Int?
  bens              Int[]
  meioDeTransporte  Int?     @map("meio_de_transporte")
  meioDeComunicacao Int?     @map("meio_de_comunicacao")
  possuiBanheiros   Int?     @map("possui_banheiros")
  dentroDeCasa      Boolean? @map("dentro_de_casa")
  pacienteId        String   @unique @map("paciente_id")
  paciente          Paciente @relation(fields: [pacienteId], references: [id])

  @@map("situacoes_habitacional")
}

model Ubs {
  id         String    @id @default(uuid())
  pacienteId String?   @unique @map("paciente_id")
  municipio  String?
  bairro     String?
  paciente   Paciente? @relation(fields: [pacienteId], references: [id])

  @@map("ubs")
}

model Cras {
  id         String    @id @default(uuid())
  pacienteId String?   @unique @map("paciente_id")
  municipio  String?
  bairro     String?
  paciente   Paciente? @relation(fields: [pacienteId], references: [id])

  @@map("cras")
}
paciente         Paciente? @relation(fields: [pacienteId], references: [id])
  pacienteId       String? @unique @map("paciente_id")
  municipio        String?
  bairro           String?

  @@map("cras")

}