generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
}

model Pessoa {
   id               String             @id @default(uuid())
   nome             String
   data_nascimento  DateTime
   cpf              String?            @unique
   identidade       String?
   naturalidade     String?
   genero           String?
   escolaridade     String?
   contato          String?
   enderecoId       String?
   estado_civil     Int?
   situacao_profissional Int?
   endereco         Endereco?          @relation("EnderecoToPessoa")
   paciente         Paciente?          @relation("PessoaToPaciente")
   telefone         Telefone[]         @relation("PessoaToTelefone")
   entrevistado     Entrevista[]       @relation("PessoaToEntrevista")
}

model Endereco {
   id          String   @id @default(uuid())
   pessoaId    String   @unique
   cep         String
   logradouro  String
   bairro      String
   cidade      String
   estado      String   @db.Char(2)
   referencia  String?
   complemento String?
   numero      String?
   pessoa      Pessoa               @relation(fields: [pessoaId], references: [id] , name: "EnderecoToPessoa")
}

model Paciente {
   id                 String               @id @default(uuid())
   pessoaId           String               @unique
   cartao_sus         String?
   remuneracao        Decimal?
   recebe_bpc         Boolean?
   bpc_valor          Decimal?
   diagnostico        String?
   medico_responsavel String?
   escola             String?
   tamanho_roupa      String?
   tamanho_calcado    String?
   ano_escolar        String?
   responsavelId      String?
   conjugeResponsavelId String?
   outroContatoId     String?
   pessoa             Pessoa               @relation(fields: [pessoaId], references: [id], name: "PessoaToPaciente")
   doencas            Doencas[]            @relation("PacienteToDoencas")
   historicoSaude     HistoricoSaude[]     @relation("PacienteToHistoricoSaude")
   composicaoFamiliar ComposicaoFamiliar[] @relation("PacienteToComposicaoFamiliar")
   cirurgia           Cirurgia[]           @relation("PacienteToCirurgia")
   quimioterapia      Quimioterapia[]      @relation("PacienteToQuimioterapia")
   radioterapia       Radioterapia[]       @relation("PacienteToRadioterapia")
   tratamento         Tratamento[]        @relation("PacienteToTratamento")
   profissionais      ProfissionalResponsavel[] @relation("PacienteToProfissionais")
   entrevistas        Entrevista[] @relation("PacienteToEntrevista")
}

model ComposicaoFamiliar {
    id              String    @id @default(uuid())
    pacienteId      String
    nome            String?
    parentesco      String?
    data_nascimento DateTime?
    escolaridade    String?
    trabalha        Boolean?
    renda           Decimal?
    paciente        Paciente  @relation(fields: [pacienteId], references: [id] , name: "PacienteToComposicaoFamiliar") 
}

model Cirurgia{
    id         String    @id @default(uuid())
    pacienteId String
    data       DateTime?
    descricao  String?
    paciente   Paciente  @relation(fields: [pacienteId], references: [id] , name: "PacienteToCirurgia")
}

model Quimioterapia{
    id         String    @id @default(uuid())
    pacienteId String
    dataInicio       DateTime?
    dataUltimaSessao DateTime?
    paciente   Paciente  @relation(fields: [pacienteId], references: [id] , name: "PacienteToQuimioterapia")
}

model Radioterapia{
    id         String    @id @default(uuid())
    pacienteId String
    dataInicio       DateTime?
    dataUltimaSessao DateTime?
    paciente   Paciente  @relation(fields: [pacienteId], references: [id] , name: "PacienteToRadioterapia")
}

model Telefone {
    id         String    @id @default(uuid())
    pessoaId   String
    numero     String?
    tipo       String?
    pessoa   Pessoa  @relation(fields: [pessoaId], references: [id] , name: "PessoaToTelefone")
}

model Tratamento {
   id                 String    @id @default(uuid())
   pacienteId         String
   tipo               String?
   data_inicio        DateTime?
   data_ultima_sessao DateTime?
   observacoes        String?
   outros_tratamentos String? 
   paciente           Paciente  @relation(fields: [pacienteId], references: [id] , name: "PacienteToTratamento")
}

model HistoricoSaude {
    id                        String   @id @default(uuid())
    pacienteId                String
    recebe_beneficio          Boolean?
    beneficio_descricao       String?
    medicamentos_uso_continuo String?
    local_procura_atendimento String?
    paciente                  Paciente @relation(fields: [pacienteId], references: [id], name: "PacienteToHistoricoSaude")
}


model Doencas {
    id         String   @id @default(uuid())
    pacienteId String
    alcoolismo Boolean?
    def_fisica  Boolean?
    def_intelectual Boolean?
    def_auditiva Boolean?
    def_visual Boolean?
    cardiopatia Boolean?
    bronquite Boolean?
    hipertensao Boolean?
    toxoplasmose Boolean?
    drogadito Boolean?
    epilepsia Boolean?
    desnutricao Boolean?
    diabetes Boolean?
    cancer Boolean?
    paciente   Paciente @relation(fields: [pacienteId], references: [id], name: "PacienteToDoencas")
}


 model SituacaoHabitacional {
   id                String      @id @default(uuid())
   responsavelId     String
   tipo_moradia      String? //"Tipo de moradia" (própria, alugada, cedida, ocupação, abrigo...)
   propriedade       Boolean? //Derivado de "A moradia é própria?" (sim/não)
   area              String? //publica ou particular (não entendi, só repliquei)
   caracteristicas   String? //Características físicas (reboco, telhado, piso, ventilação...)
   eletrodomesticos  String? //Lista: geladeira, TV, fogão, máquina de lavar, etc. (checkbox)
   bens_imovel       String? //Terreno, carro.
   meios_transporte  String? //Meio transporte mais usado. ex carro, onibus etc
   meios_comunicacao String? //Como a pessoa se informa, tv radio ou internet, o mais usado
   possui_banheiro   Boolean? //Possui banheiro? (sim/não)
   dentro_de_casa    Boolean? //Banheiro dentro de casa? (sim/não)
   destino_lixo      String? //Como o lixo é descartado? (coleta, entulho, queimado, enterrado)
   tipo_agua         String? //Tipo de água (encanada, fervida, filtrada, clorada)
   valor_total       Decimal? //Sem info
 }
 

 model ProfissionalResponsavel {
   id           String   @id @default(uuid())
   pacienteId   String
   tipo         String   // ex: "Médico", "Psicólogo", "Assistente Social", "Outro"
   nome         String
   crm          String?
   paciente     Paciente @relation(fields: [pacienteId], references: [id], name: "PacienteToProfissionais")
}

model Entrevista {
  id              String   @id @default(uuid())
  pacienteId      String
  entrevistadoId  String?   // Pessoa (ex: responsável)
  cidade          String?
  data            DateTime  @default(now())
  como_soube      String?   // campo: "Como ficou sabendo da ONG GUIDO?"
  observacoes     String?
  entrevistador   String?
  entrevistado    Pessoa?  @relation(fields: [entrevistadoId], references: [id] , name: "PessoaToEntrevista")     
  paciente        Paciente @relation(fields: [pacienteId], references: [id], name: "PacienteToEntrevista")
}
